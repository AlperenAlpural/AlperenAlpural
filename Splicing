with open('sample_dataset.fasta', 'r') as file:
	sample  = file.read().replace('\n', '')
sample = sample.split('>')
sample = sample[1:]

s = sample[0][11:]
intron_12 = sample[1][11:]
intron_15 = sample[2][11:]


s = s.replace(intron_12,'').replace(intron_15,'')
print('Transkribe edilmeye hazir DNA dizisi : \n' + s)


codon_table = {
        'TTT': 'F',     'CTT': 'L',     'ATT': 'I',     'GTT': 'V',
        'TTC': 'F',     'CTC': 'L',     'ATC': 'I',     'GTC': 'V',
        'TTA': 'L',     'CTA': 'L',     'ATA': 'I',     'GTA': 'V',
        'TTG': 'L',     'CTG': 'L',     'ATG': 'M',     'GTG': 'V',
        'TCT': 'S',     'CCT': 'P',     'ACT': 'T',     'GCT': 'A',
        'TCC': 'S',     'CCC': 'P',     'ACC': 'T',     'GCC': 'A',
        'TCA': 'S',     'CCA': 'P',     'ACA': 'T',     'GCA': 'A',
        'TCG': 'S',     'CCG': 'P',     'ACG': 'T',     'GCG': 'A',
        'TAT': 'Y',     'CAT': 'H',     'AAT': 'N',     'GAT': 'D',
        'TAC': 'Y',     'CAC': 'H',     'AAC': 'N',     'GAC': 'D',
        'TAA': '' ,     'CAA': 'Q',     'AAA': 'K',     'GAA': 'E',
        'TAG': '' ,     'CAG': 'Q',     'AAG': 'K',     'GAG': 'E',
        'TGT': 'C',     'CGT': 'R',     'AGT': 'S',     'GGT': 'G',
        'TGC': 'C',     'CGC': 'R',     'AGC': 'S',     'GGC': 'G',
        'TGA': '' ,     'CGA': 'R',     'AGA': 'R',     'GGA': 'G',
        'TGG': 'W',     'CGG': 'R',     'AGG': 'R',     'GGG': 'G'
    }

def protein_yap(s):
	for i in range(0,len(s)-3):
		if s[i:i+3] in codon_table:
			s = s.replace(s[i:i+3],codon_table[s[i:i+3]],1)

	return s
s = protein_yap(s)
print('Final Protein String  : \n' + s)
print('sitedeki output : \n' + 'MVYIADKQHVASREAYGHMFKVCA')



Transkribe edilmeye hazir DNA dizisi : 
ATGGTCTACATAGCTGACAAACAGCACGTAGCATCTCGAGAGGCATATGGTCACATGTTCAAAGTTTGCGCCTAG
Final Protein String  : 
MVYIADKQHVASREAYGHMFKVCA
sitedeki output : 
MVYIADKQHVASREAYGHMFKVCA
